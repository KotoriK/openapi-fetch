openapi:
  version: '3.1'
paths:
  /create-post:
    post:
      requestBody:
        $ref: '#/components/requestBodies/CreatePost'
      responses:
        201:
          $ref: '#/components/responses/CreatePost'
        500:
          $ref: '#/components/responses/Error'
  /create-tag/{name}:
    parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
    post:
      requestBody:
        $ref: '#/components/requestBodies/CreateTag'
      responses:
        201:
          $ref: '#/components/responses/CreateTag'
        500:
          $ref: '#/components/responses/Error'
  /post/{post_id}:
    parameters:
      - in: path
        name: post_id
        schema:
          type: string
        required: true
    get:
      responses:
        200:
          $ref: '#/components/responses/PostGet'
        404:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'
    delete:
      responses:
        200:
          $ref: '#/components/responses/PostDelete'
        500:
          $ref: '#/components/responses/Error'

  /self:
    get:
      responses:
        200:
          $ref: '#/components/responses/User'
        404:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'
  /string-array:
    get:
      responses:
        200:
          $ref: '#/components/responses/StringArray'
        500:
          $ref: '#/components/responses/Error'
  /anyMethod:
    get:
      responses:
        200:
          $ref: '#/components/responses/User'
        404:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'
    put:
      responses:
        200:
          $ref: '#/components/responses/User'
        404:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'
    post:
      responses:
        200:
          $ref: '#/components/responses/User'
        404:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'
    delete:
      responses:
        200:
          $ref: '#/components/responses/User'
        404:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'
    options:
      responses:
        200:
          $ref: '#/components/responses/User'
        404:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'
    head:
      responses:
        200:
          $ref: '#/components/responses/User'
        404:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'
    patch:
      responses:
        200:
          $ref: '#/components/responses/User'
        404:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'
    trace:
      responses:
        200:
          $ref: '#/components/responses/User'
        404:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

components:
  schemas:
    Post:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
        publish_date:
          type: number
      required:
        - title
        - body
    StringArray:
      type: array
      items:
        type: string
    User:
      type: object
      properties:
        email:
          type: string
        age:
          type: number
        avatar:
          type: string
      required:
        - email
  requestBodies:
    CreatePost:
      required: true
      content:
        "application/json;charset=utf-8":
          schema:
            type: object
            properties:
              title:
                type: string
              body:
                type: string
              publish_date:
                type: number
            required:
              - title
              - body
              - publish_date
    CreateTag:
      content:
        application/json:
          schema:
            type: object
            properties:
              description:
                type: string
  responses:
    CreatePost:
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
            required:
              - status
    CreateTag:
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
            required:
              - status
    Error:
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
              message:
                type: string
            required:
              - code
              - message
    PostDelete:
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
            required:
              - status
    PostGet:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Post'
    StringArray:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StringArray'
    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
